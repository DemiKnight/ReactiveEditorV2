openapi: 3.0.3
info:
  title: Reactive Editor Account management
  description: Reactive Editor Account management
  version: 0.0.1
servers:
  - url: 'http://localhost:8080/api/v1'
paths:
  /account:
    post:
      summary: 'Create new account'
      security: [ ]
      requestBody:
        $ref: '#/components/requestBodies/CreateAccount'
      responses:
        '201':
          $ref: '#/components/responses/CreatedAccount'
  /account/{id}:
    get:
      summary: 'Retrieve account'
      parameters:
        - name: 'id'
          in: 'path'
          description: 'Identifier of account'
          required: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: integer
                minimum: 0
      responses:
        200:
          $ref: '#/components/responses/AccountRetrieval'
        404:
          description: 'Account not found'
        401:
          description: 'No access'

    patch:
      summary: 'Update account properties'
      operationId: updateAccountProperties
      parameters:
        - name: 'id'
          in: 'path'
          description: 'Identifier of account'
          required: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: integer
                minimum: 0
      responses:
        200:
          $ref: '#/components/responses/AccountRetrieval'
    delete:
      summary: 'Delete/remove account'
      operationId: deleteAccount
      responses:
        '204':
          description: 'Remove account'
      parameters:
        - name: 'id'
          in: 'path'
          description: 'Identifier of account'
          required: true
          schema:
            anyOf:
              - type: string
                format: uuid
              - type: integer
                minimum: 0
components:
  schemas:
    AvatarLocation:
      type: object
      properties:
        isDefault:
          type: boolean
          default: true
        iconURL:
          nullable: true
          type: string
          format: url
          default: null

    Account:
      description: 'Regular Account'
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        username:
          type: string
        email:
          type: string
          format: email
        avatar:
          $ref: '#components/schemas/AvatarLocation'
        UserType:
          description: 'To be a Tutor, must be invited made by an admin'
          type: string
          default: 'Student'
          enum:
            - 'Student'
            - 'Tutor'

  requestBodies:
    CreateAccount:
      description: 'Account creation'
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
                minimum: 8
                maximum: 255
              username:
                type: string
                maximum: 32
                minimum: 2

  responses:
    AccountRetrieval:
      description: 'Retrieve latest version of an account.'
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/Account'
    CreatedAccount:
      description: 'Created account & session'
      content:
        application/json:
          schema:
            type: object
            properties:
              account:
                $ref: '#/components/schemas/Account'
              token:
                type: string
                format: jwt
                pattern: '(^[\w-]*\.[\w-]*\.[\w-]*$)'



  securitySchemes:
    BearerJWT:
      type: 'http'
      scheme: 'bearer'
      bearerFormat: 'jwt'

security:
  - BearerJWT: [ ]